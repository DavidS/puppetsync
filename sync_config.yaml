# This is a proof-of--concept of stages & steps
---
# PuppetSync performs actions in stages.
#   - each stage
#   - related stages can collate their reports
#   - all commands
#   - the stage 'puppet' is special and applies control repo
#   - empty stages are skipped
# ------------------------------------------------------------------------------
# stage defaults:
#   enabled:  true
#   required:

puppetsync:
  # If this criteria is met, the repository is completely skipped without being processed
  # FIXME: implement this
  #  skip_repo_if:
  #  - 'not_a_simp_module.rb'
  facts:
    jira_project: 'SIMP'

stages:
  ### # PuppetSync!  Use this Puppet control repo to sync your assets according to
  ### # declarative rules.  The name 'puppet' is magical and means Puppet will run.
  ### puppet:
  ###   enabled: false

  tag_check:
    enabled: true
    description: 'Check to see if this module has been tagged on this ref'
    steps:
      - 'tag_time.rb'
    skip_repo_on_failure: true
  # TODO: fail repo if tests fail
###  tests:
###    enabled: false
###    description: 'These tests should pass before publishing'
###    steps:
###      - 'module_tests.rb'
###    skip_repo_on_failure: true
###
###  commit:
###    enabled: false
###    description: 'Add updates into a Git commit w/message'
###    steps:
###      - 'git_commit.rb'
###    skip_repo_on_failure: true

